name: Publish

on:
  release:
    types: [published]

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          # 109 CHF for an developer account so you can sign your application to allow it to run on Apple Silicon...
          #- kind: macOS
          #  os: macos-latest
          #  target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: 6.0.x
          
      - name: Create build data
        shell: bash
        id: build-data
        run: |
          tag=$(git describe --tags --abbrev=0)
          echo ::set-output name=tag::$tag
          echo ::set-output name=release_name::"port-$tag-${{ matrix.target }}"

      - name: Build
        shell: bash
        run: |
          # Build everything
          dotnet publish src/port.csproj --self-contained --runtime "${{ matrix.target }}" -c Release -o "${{ steps.build-data.outputs.release_name }}"

          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip for Windows
            7z a -tzip "${{ steps.build-data.outputs.release_name }}.zip" "./${{ steps.build-data.outputs.release_name }}/*"
          else
          tar czvf "${{ steps.build-data.outputs.release_name }}.tar.gz" "${{ steps.build-data.outputs.release_name }}"
          fi

      - name: Delete output directory
        shell: bash
        run: |
          rm -r ${{ steps.build-data.outputs.release_name }}
      
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "port*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
